name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow on version tags like v1.0.0

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install requirments
        run: |
          pip install -r requirments.txt

      - name: Build Linux executable
        run: |
          pyinstaller --onefile --add-data "./assets:assets"  --hidden-import "PIL._tkinter_finder" --windowed main.py
        shell: bash

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: dist/main

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install requirments
        run: |
          pip install -r requirments.txt

      - name: Build Windows & linux executable
        run: |
          pyinstaller --onefile --add-data "assets;assets"  --hidden-import "PIL._tkinter_finder" --windowed main.py
          ls dist/
        shell: bash

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/main.exe


  upload-release-assets:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-binary
          path: ./linux

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-binary
          path: ./windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            ## New ver

      - name: Upload Linux Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/main
          asset_name: main_linux_amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/main.exe
          asset_name: main_windows_x86_x64.exe
          asset_content_type: application/octet-stream
